load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_library", "rust_test")
load("@rules_rust_prost//:defs.bzl", "rust_prost_library")

# Top-level target: the runtime executable.
rust_binary(
    name = "workd",
    srcs = ["main.rs"],
    visibility = ["//visibility:public"],
    deps = [
        ":cri",
        ":cri-api-prost",
        ":state",
        "@crates//:clap",
        "@crates//:futures",
        "@crates//:hyper-util",
        "@crates//:log",
        "@crates//:opentelemetry-appender-log",
        "@crates//:opentelemetry-stdout",
        "@crates//:opentelemetry_sdk",
        "@crates//:tokio",
        "@crates//:tokio-stream",
        "@crates//:tonic",
        "@crates//:tower",
        "@crates//:tracing",
        "@crates//:tracing-subscriber",
    ],
)

rust_library(
    name = "cri",
    srcs = ["cri.rs"],
    deps = [
        ":cri-api-prost",
        ":error",
        ":names",
        ":state",
        "@crates//:tokio-stream",
        "@crates//:tonic",
    ],
)

rust_library(
    name = "state",
    srcs = ["state.rs"],
    deps = [
        ":containers",
        ":cri-api-prost",
        ":error",
        ":grpc-pod",
        ":metadata-prost",
        ":names",
        "@crates//:futures",
        "@crates//:http",
        "@crates//:papaya",
        "@crates//:tokio",
        "@crates//:tonic",
        "@crates//:tower",
        "@crates//:wasmtime",
    ],
)

rust_library(
    name = "host",
    srcs = ["host.rs"],
    deps = [
        ":error",
        ":names",
        "@crates//:anyhow",
        "@crates//:tonic",
        "@crates//:wasmtime",
    ],
)

rust_library(
    name = "grpc-pod",
    srcs = ["grpc-pod.rs"],
    deps = [
        ":containers",
        ":error",
        ":host",
        ":metadata-prost",
        ":names",
        "//work/runtime/decode",
        "//work/runtime/encode",
        "@crates//:axum",
        "@crates//:futures",
        "@crates//:http",
        "@crates//:tokio",
        "@crates//:tonic",
        "@crates//:wasmtime",
    ],
)

rust_library(
    name = "containers",
    srcs = ["containers.rs"],
    deps = [
        ":error",
        ":metadata-prost",
        ":names",
        "@crates//:bytes",
        "@crates//:moka",
        "@crates//:prost",
        "@crates//:reqwest",
        "@crates//:serde",
        "@crates//:tokio",
        "@crates//:tonic",
        "@crates//:wasmtime",
    ],
)

rust_library(
    name = "error",
    srcs = ["error.rs"],
    visibility = [":__subpackages__"],
    deps = [
        "@crates//:log",
        "@crates//:tonic",
    ],
)

rust_library(
    name = "names",
    srcs = ["names.rs"],
    visibility = [":__subpackages__"],
    deps = [
        ":error",
        "@crates//:lazy_static",
        "@crates//:regex",
        "@crates//:tonic",
    ],
)

rust_test(
    name = "names-test",
    crate = ":names",
)

exports_files(
    ["metadata.proto"],
    visibility = ["//visibility:public"],
)

proto_library(
    name = "metadata-proto",
    srcs = ["metadata.proto"],
    visibility = [":__subpackages__"],
)

rust_prost_library(
    name = "metadata-prost",
    proto = "metadata-proto",
    visibility = [":__subpackages__"],
)

rust_prost_library(
    name = "cri-api-prost",
    proto = "@cri-api//pkg/apis/runtime/v1:api-proto",
)
