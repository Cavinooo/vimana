load("@rules_proto//proto:defs.bzl", "proto_lang_toolchain")
load("@rules_rust//proto/prost:defs.bzl", "rust_prost_toolchain")
load("@rules_rust//rust:defs.bzl", "rust_library_group")

# Set up a Prost Bazel toolchain
# using the Prost and Tonic binaries referenced in `MODULE.bazel`
# http://bazelbuild.github.io/rules_rust/rust_proto.html#custom-prost-deps

rust_library_group(
    name = "prost-runtime",
    deps = ["@crates//:prost"],
)

rust_library_group(
    name = "tonic-runtime",
    deps = [
        ":prost-runtime",
        "@crates//:tonic",
    ],
)

rust_prost_toolchain(
    name = "prost-toolchain-impl",
    prost_plugin = "@crates//:protoc-gen-prost__protoc-gen-prost",
    prost_runtime = ":prost-runtime",
    prost_types = "@crates//:prost-types",
    tonic_plugin = "@crates//:protoc-gen-tonic__protoc-gen-tonic",
    tonic_runtime = ":tonic-runtime",
)

toolchain(
    name = "prost-toolchain",
    toolchain = "prost-toolchain-impl",
    toolchain_type = "@rules_rust//proto/prost:toolchain_type",
)

# Set up the Python Protobuf toolchain for use in tests.

proto_lang_toolchain(
    name = "protoc-python",
    command_line = "--python_out=%s",
    progress_message = "Generating Python Protobuf library %{label}",
    runtime = "@pypi//protobuf",
)

toolchain(
    name = "protoc-python-toolchain",
    toolchain = "protoc-python",
    toolchain_type = "@rules_python//python/proto:toolchain_type",
)
