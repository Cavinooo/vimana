load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "controller",
    srcs = [
        "component_controller.go",
        "controllers_common.go",
        "domain_controller.go",
        "server_controller.go",
        "vimana_controller.go",
    ],
    importpath = "vimana.host/operator/internal/controller",
    visibility = ["//operator/cmd:__pkg__"],
    deps = [
        "//operator/api/v1alpha1",
        "@com_github_envoyproxy_gateway//api/v1alpha1",
        "@io_k8s_api//node/v1:node",
        "@io_k8s_apiextensions_apiserver//pkg/apis/apiextensions/v1:apiextensions",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apimachinery//pkg/api/meta",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/types",
        "@io_k8s_sigs_controller_runtime//:controller-runtime",
        "@io_k8s_sigs_controller_runtime//pkg/client",
        "@io_k8s_sigs_controller_runtime//pkg/handler",
        "@io_k8s_sigs_controller_runtime//pkg/log",
        "@io_k8s_sigs_controller_runtime//pkg/reconcile",
        "@io_k8s_sigs_gateway_api//apis/v1:apis",
        "@io_k8s_utils//ptr",
    ],
)

go_test(
    name = "controller_test",
    srcs = [
        "component_controller_test.go",
        "domain_controller_test.go",
        "server_controller_test.go",
        "suite_test.go",
        "vimana_controller_test.go",
    ],
    # Disable ANSI-escaped output in the test log.
    args = ["-ginkgo.no-color"],
    data = [
        # `etcd` and `kube-apiserver` would be downloaded by `setup-envtest`
        # in a "normal" (non-Bazel) Operator SDK project.
        # https://pkg.go.dev/sigs.k8s.io/controller-runtime/tools/setup-envtest
        ":envoy-gateway-crds",
        ":etcd-asset",
        ":gateway-api-crds",
        ":kube-apiserver-asset",
        "//operator/config/crd/bases",
    ],
    embed = [":controller"],
    deps = [
        "//operator/api/v1alpha1",
        "@com_github_envoyproxy_gateway//api/v1alpha1",
        "@com_github_onsi_ginkgo_v2//:ginkgo",
        "@com_github_onsi_gomega//:gomega",
        "@com_github_onsi_gomega//format",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_api//node/v1:node",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/types",
        "@io_k8s_client_go//kubernetes/scheme",
        "@io_k8s_client_go//rest",
        "@io_k8s_sigs_controller_runtime//pkg/client",
        "@io_k8s_sigs_controller_runtime//pkg/envtest",
        "@io_k8s_sigs_controller_runtime//pkg/log",
        "@io_k8s_sigs_controller_runtime//pkg/log/zap",
        "@io_k8s_sigs_controller_runtime//pkg/reconcile",
        "@io_k8s_sigs_gateway_api//apis/v1:apis",
        "@io_k8s_utils//ptr",
    ],
)

# Bazel adds the `.exe` suffix to all executable files (even on Linux),
# but the controller runtime's `envtest` expects to find both binaries,
# without the suffix, under the `assets/` subdirectory.
# Use `copy_file` to rename them.

copy_file(
    name = "etcd-asset",
    src = "@rules_k8s//:etcd",
    out = "assets/etcd",
    allow_symlink = True,
    is_executable = True,
)

copy_file(
    name = "kube-apiserver-asset",
    src = "@rules_k8s//:kube-apiserver",
    out = "assets/kube-apiserver",
    allow_symlink = True,
    is_executable = True,
)

# The test harness expects to find all CRD installation files under the `apis/` subdirectory.

copy_file(
    name = "gateway-api-crds",
    src = "@rules_k8s//:gateway-api-crds",
    out = "apis/gateway-api.yaml",
    allow_symlink = True,
)

copy_file(
    name = "envoy-gateway-crds",
    src = "@rules_k8s//:envoy-gateway-crds",
    out = "apis/envoy-gateway.yaml",
    allow_symlink = True,
)
