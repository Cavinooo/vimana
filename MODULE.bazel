module(name = "vimana")

bazel_dep(name = "buildifier_prebuilt", version = "7.3.1", dev_dependency = True, repo_name = "buildtools")

bazel_dep(name = "rules_nodejs", version = "6.3.0")
bazel_dep(name = "rules_rust", version = "0.50.1")
bazel_dep(name = "toolchains_protoc", version = "0.3.3")
bazel_dep(name = "cri-api")
git_override(
    module_name = "cri-api",
    commit = "010fdf8d785a7f35fa5a1cc80c40bde0c13e1dfd",
    patches = [":patches/cri-api.patch"],
    remote = "git@github.com:kubernetes/cri-api.git",
)

bazel_dep(name = "rules_wasm")
git_override(
    module_name = "rules_wasm",
    commit = "a96e53c4df96fc4228679381714d0b7d6c716073",
    remote = "git@github.com:vimana-cloud/rules_wasm.git",
)

# Access protobuf well-known types proto rules in the `@protobuf` repo.
protoc = use_extension("@toolchains_protoc//protoc:extensions.bzl", "protoc")
use_repo(protoc, protobuf = "com_google_protobuf")

# Rust setup:

crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate")
crate.spec(
    package = "bytes",
    version = "1.7.2",
)
crate.spec(
    package = "http",
    version = "1.1.0",
)
crate.spec(
    package = "http-body",
    version = "1.0.1",
)
crate.spec(
    package = "http-body-util",
    version = "0.1.2",
)
crate.spec(
    features = [
        "server",
        "http1",
    ],
    package = "hyper",
    version = "1.4.1",
)
crate.spec(
    features = ["tokio"],
    package = "hyper-util",
    version = "0.1.8",
)
crate.spec(
    package = "lazy_static",
    version = "1.5.0",
)
crate.spec(
    package = "prost",
    version = "0.13.2",
)
crate.spec(
    package = "prost-types",
    version = "0.13.2",
)
crate.spec(
    package = "protoc-gen-prost",
    version = "0.4.0",
)
crate.spec(
    package = "protoc-gen-tonic",
    version = "0.4.1",
)
crate.spec(
    package = "regex",
    version = "1.10.6",
)
crate.spec(
    features = [
        "macros",
        "rt-multi-thread",
        "sync",
    ],
    package = "tokio",
    version = "1.40.0",
)
crate.spec(
    features = ["net"],
    package = "tokio-stream",
    version = "0.1.16",
)
crate.spec(
    package = "tonic",
    version = "0.12.2",
)
crate.spec(
    package = "tower-service",
    version = "0.3.3",
)
crate.spec(
    package = "wasmtime",
    version = "24.0.0",
)

# Generate certain binaries needed for building.
crate.annotation(
    crate = "protoc-gen-prost",
    gen_binaries = ["protoc-gen-prost"],
)
crate.annotation(
    crate = "protoc-gen-tonic",
    gen_binaries = ["protoc-gen-tonic"],
)
crate.from_specs()
use_repo(crate, "crates")

register_toolchains("//:prost-toolchain")

# NodeJS setup (for serving documentation with VitePress):

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain()
use_repo(node, "nodejs")
